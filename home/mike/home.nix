#          ╔══════════════════════════════════════════════════════════╗
#          ║                         home.nix                         ║
#          ╚══════════════════════════════════════════════════════════╝
# ══ TODO: ═════════════════════════════════════════════════════════════
#
# - [x] Modularize packages into separate configuration files
# This is a default home.nix generated by the follwing hone-manager command
#
# home-manager init ./
{
  config,
  lib,
  pkgs,
  zen-browser,
  inputs,
  ...
}: {
  home.packages = with pkgs; [
    # Note-taking & Office
    obsidian # A powerful knowledge base that works on local Markdown files
    libreoffice-still # Comprehensive, professional-quality productivity suite, a variant of openoffice.org

    # Email Clients
    thunderbird # A free and open-source email, newsfeed, chat, and calendaring client

    # Web Browsers
    firefox # A free and open-source web browser

    # Media
    plexamp # A music player for Plex Pass users

    # Formatting Tools
    cargo

    # Utilities
    python312 # Python programming language
    python312Packages.numpy
    python312Packages.pip
    python3
    neofetch # A command-line system information tool
    nnn # Terminal file manager
    thefuck # Correct your commands
    copyq
    curl
    planify
    cmake
    ninja

    # Archives
    zip # Package and compress (archive) files
    xz # Lossless data compression
    unzip # Decompression program for .zip files
    p7zip # Command-line version of 7-Zip

    # Search Utilities
    fzf # A command-line fuzzy finder

    # Networking Tools
    nmap # A utility for network discovery and security auditing

    # Miscellaneous
    nixd
    cowsay # Configurable talking cow
    sl
    nyancat
    file # Determines file type
    which # Shows the full path of (shell
    tree # Displays directories as trees (with optional color/HTML output)

    # Nix Related
    nix-output-monitor # Monitor for nix builds

    # Productivity
    hugo # Static site generator
    file
    kitty
    pipx

    nodejs
    nodejs_22
    lua # Lua programming language
    luarocks

    inputs.zen-browser.packages."${system}".specific # Zen Browser
    marksman

    neovim
    # streamrip
    neomutt


    fastfetch
    rsync # A fast, versatile, remote (and local) file-copying tool
    duplicati # Free backup software to store encrypted backups online
    taskwarrior3 # Taskwarrior is Free and Open Source Software that manages your TODO list from the command line
    spotify
    cowsay
    ponysay

    darktable
    gimp
    go
    poetry
    wofi

    cheat
    tldr
  ];
  # Home Manager needs a bit of information about you and the paths it should
  # manage.
  home.username = lib.mkDefault "mike";
  home.homeDirectory = lib.mkDefault "/home/${config.home.username}";

  # This value determines the Home Manager release that your configuration is
  # compatible with. This helps avoid breakage when a new Home Manager release
  # introduces backwards incompatible changes.
  #
  # You should not change this value, even if you update Home Manager. If you do
  # want to update the value, then make sure to first check the Home Manager
  # release notes.
  home = {
    stateVersion = "24.05";
  };

  # Home Manager is pretty good at managing dotfiles. The primary way to manage
  # plain files is through 'home.file'.
  home.file = {
    # # Building this configuration will create a copy of 'dotfiles/screenrc' in
    # # the Nix store. Activating the configuration will then make '~/.screenrc' a
    # # symlink to the Nix store copy.
    # ".screenrc".source = dotfiles/screenrc;

    # # You can also set the file content immediately.
    # ".gradle/gradle.properties".text = ''
    #   org.gradle.console=verbose
    #   org.gradle.daemon.idletimeout=3600000
    # '';
  };

  # Home Manager can also manage your environment variables through
  # 'home.sessionVariables'. If you don't want to manage your shell through Home
  # Manager then you have to manually source 'hm-session-vars.sh' located at
  # either
  #
  #  ~/.nix-profile/etc/profile.d/hm-session-vars.sh
  #
  # or
  #
  #  ~/.local/state/nix/profiles/profile/etc/profile.d/hm-session-vars.sh
  #
  # or
  #
  #  /etc/profiles/per-user/m3tam3re/etc/profile.d/hm-session-vars.sh
  #
  home.sessionVariables = {
    EDITOR = "nvim";
    VISUAL = "nvim";
    BROWSER = "zen-browser";
    TERMINAL = "kitty";
    HOME = "/home/mike";
    XDG_CONFIG_HOME = "$HOME/.config";
    MAIL = "$HOME/Mail";
  };

  programs = {
    # Basic configuration of git
    git = {
      enable = true;
      userName = "mike";
      userEmail = "mikehall@mikehall94.com";
      extraConfig = {
        init.defaultBranch = "main";
        safe.directory = "home/mike/dotfiles";
      };
    };
    home-manager.enable = true;
  };
  # Nicely reload system units when changing configs
  systemd.user.startServices = "sd-switch";
}
